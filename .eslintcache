[{"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\index.js":"1","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\App.v2.react.js":"2","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\serviceWorker.js":"3","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\containers\\RegisterContainer.js":"4","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\containers\\TrendingFeedsContainer.js":"5","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\containers\\HeadlinesFeedsContainer.js":"6","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\containers\\LoginContainer.js":"7","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\reducers\\rootReducers.js":"8","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\pages\\NotFound.js":"9","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\ViewDetailRedirect.js":"10","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\pages\\DashboardPage.js":"11","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\pages\\Map.js":"12","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\reducers\\authReducers.js":"13","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\reducers\\trendingFeedsReducer.js":"14","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\reducers\\headlinesFeedsReducer.js":"15","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\pages\\LoginPage.js":"16","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\actions\\AuthAction.js":"17","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\pages\\HeadlinesFeedsPage.js":"18","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\actions\\HeadlinesFeedsAction.js":"19","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\pages\\RegisterPage.js":"20","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\actions\\TrendingFeedsAction.js":"21","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\pages\\TrendingFeedsPage.js":"22","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\constants\\ActionTypes.js":"23","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\util\\AuthUtil.js":"24","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\Form\\LoginForm.js":"25","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\SiteWrapper.react.js":"26","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\util\\CommonUtil.js":"27","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\util\\ApiUtil.js":"28","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\Form\\RegisterForm.js":"29","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\util\\ImageUtil.js":"30","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\util\\withTouchedErrors.react.js":"31","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\Form\\LoginFormStrings.js":"32","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\HeadlineFeed\\index.js":"33","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\Form\\RegisterFormStrings.js":"34","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\base\\site\\InnerSiteWrapper.react.js":"35","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\HeadlineFeed\\HeadlineFeed.js":"36","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\base\\site\\AliHeader.js":"37","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\HeadlineFeed\\SubHeadlineFeed.js":"38","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\base\\site\\AliLogo.js":"39"},{"size":720,"mtime":1608374260128,"results":"40","hashOfConfig":"41"},{"size":1965,"mtime":1609725233069,"results":"42","hashOfConfig":"41"},{"size":5227,"mtime":1606711328230,"results":"43","hashOfConfig":"41"},{"size":285,"mtime":1608374234431,"results":"44","hashOfConfig":"41"},{"size":714,"mtime":1608310215499,"results":"45","hashOfConfig":"41"},{"size":693,"mtime":1608374333298,"results":"46","hashOfConfig":"41"},{"size":459,"mtime":1608373847242,"results":"47","hashOfConfig":"41"},{"size":356,"mtime":1608310215500,"results":"48","hashOfConfig":"41"},{"size":503,"mtime":1608641184570,"results":"49","hashOfConfig":"41"},{"size":1466,"mtime":1608639926646,"results":"50","hashOfConfig":"41"},{"size":35326,"mtime":1609725492885,"results":"51","hashOfConfig":"41"},{"size":873,"mtime":1609727917146,"results":"52","hashOfConfig":"41"},{"size":1336,"mtime":1608381601863,"results":"53","hashOfConfig":"41"},{"size":1560,"mtime":1608308240827,"results":"54","hashOfConfig":"41"},{"size":1562,"mtime":1608308240811,"results":"55","hashOfConfig":"41"},{"size":2072,"mtime":1608384189629,"results":"56","hashOfConfig":"41"},{"size":3294,"mtime":1608384605187,"results":"57","hashOfConfig":"41"},{"size":4395,"mtime":1608514355843,"results":"58","hashOfConfig":"41"},{"size":1560,"mtime":1608308240801,"results":"59","hashOfConfig":"41"},{"size":1904,"mtime":1608641754768,"results":"60","hashOfConfig":"41"},{"size":1525,"mtime":1608374359567,"results":"61","hashOfConfig":"41"},{"size":7033,"mtime":1608641799363,"results":"62","hashOfConfig":"41"},{"size":52,"mtime":1608216152047,"results":"63","hashOfConfig":"41"},{"size":626,"mtime":1608381540152,"results":"64","hashOfConfig":"41"},{"size":1904,"mtime":1608384812953,"results":"65","hashOfConfig":"41"},{"size":6320,"mtime":1608641730255,"results":"66","hashOfConfig":"41"},{"size":258,"mtime":1606711328232,"results":"67","hashOfConfig":"41"},{"size":467,"mtime":1606711328232,"results":"68","hashOfConfig":"41"},{"size":3031,"mtime":1608384826055,"results":"69","hashOfConfig":"41"},{"size":1207,"mtime":1608374246857,"results":"70","hashOfConfig":"41"},{"size":1197,"mtime":1608310215504,"results":"71","hashOfConfig":"41"},{"size":244,"mtime":1608384373681,"results":"72","hashOfConfig":"41"},{"size":91,"mtime":1608308240805,"results":"73","hashOfConfig":"41"},{"size":453,"mtime":1608382628547,"results":"74","hashOfConfig":"41"},{"size":1482,"mtime":1608642951975,"results":"75","hashOfConfig":"41"},{"size":2368,"mtime":1608374272081,"results":"76","hashOfConfig":"41"},{"size":1689,"mtime":1608641709438,"results":"77","hashOfConfig":"41"},{"size":1611,"mtime":1608310242233,"results":"78","hashOfConfig":"41"},{"size":800,"mtime":1606711328223,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"td78ve",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"82"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"82"},"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\index.js",[],["175","176"],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\App.v2.react.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\serviceWorker.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\containers\\RegisterContainer.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\containers\\TrendingFeedsContainer.js",["177","178"],"// @flow\r\n\r\nimport React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchNewsList } from '../actions/TrendingFeedsAction';\r\nimport TrendingFeedsPage from \"../pages/TrendingFeedsPage\";\r\n\r\n\r\nfunction mapStateToProps({trendingFeedsReducer, authReducers}) {\r\n    return {\r\n        list: trendingFeedsReducer.list,\r\n        page: trendingFeedsReducer.page,\r\n        hasMore: trendingFeedsReducer.hasMore,\r\n        ...authReducers\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFetchNewsList: (loadMore) => {\r\n            dispatch(fetchNewsList(loadMore));\r\n        }\r\n    }\r\n}\r\n\r\nexport const TrendingFeeds = connect(\r\n    mapStateToProps\r\n)(TrendingFeedsPage)","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\containers\\HeadlinesFeedsContainer.js",["179"],"// @flow\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchNewsList } from '../actions/HeadlinesFeedsAction';\r\nimport HeadlinesFeedsPage from \"../pages/HeadlinesFeedsPage\";\r\n\r\n\r\nfunction mapStateToProps({headlinesFeedsReducer, authReducers}) {\r\n    return {\r\n        list: headlinesFeedsReducer.list,\r\n        page: headlinesFeedsReducer.page,\r\n        hasMore: headlinesFeedsReducer.hasMore,\r\n        ...authReducers\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFetchNewsList: (loadMore) => {\r\n            dispatch(fetchNewsList(loadMore));\r\n        }\r\n    }\r\n}\r\n\r\nexport const HeadlinesFeeds = connect(\r\n    mapStateToProps\r\n)(HeadlinesFeedsPage)","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\containers\\LoginContainer.js",["180","181"],"import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { postUserLogin } from '../actions/AuthAction';\r\nimport Login from \"../pages/LoginPage\";\r\n\r\nfunction mapStateToProps({authReducers}) {\r\n    return authReducers;\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postUserLogin: userInfo => dispatch(postUserLogin(userInfo))\r\n  });\r\n  \r\nconst LoginContainer = connect(\r\n    mapStateToProps\r\n)(Login)\r\nexport default LoginContainer","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\reducers\\rootReducers.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\pages\\NotFound.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\ViewDetailRedirect.js",["182"],"import * as React from \"react\";\r\nimport axios from 'axios'\r\nimport { Redirect } from \"react-router-dom\";\r\nexport default class ViewDetailRedirect extends React.Component {\r\n    state = {\r\n        url: null,\r\n    };\r\n\r\n    componentWillMount() {\r\n        const { id } = this.props.params.id;\r\n        axios.post(\"server\", { id }).then(\r\n            result => {\r\n                this._asyncRequest = null;\r\n                this.setState({ url: result.url });\r\n            }\r\n        ).catch((err)=>{})\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     if (this._asyncRequest) {\r\n    //         this._asyncRequest.cancel();\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        const url = this.url;\r\n        const redirectUrl =\"link\"\r\n        return <Redirect url={url||redirectUrl}></Redirect>\r\n    }\r\n    \r\n\r\n    // async render() {\r\n    //     const { id } = this.props.match.params\r\n    //     return (\r\n    //         <div>\r\n    //             {{getRedirect(id)}}\r\n    //         </div>\r\n    //     )\r\n\r\n    // }\r\n\r\n    // getRedirect = async (id)=> {\r\n    //     try {\r\n    //         let result = await axios.post(\"server\", { id })\r\n    //         if (result && result.url) {\r\n    //             return <Redirect url={result.url} />\r\n    //         }\r\n    //     }\r\n    //     catch { }\r\n    //     return <p>Redirecting to 404 page...</p>\r\n    // }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nfunction openInNewTab(url) {\r\n    var win = window.open(url, '_blank');\r\n    win.focus();\r\n}\r\n\r\n","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\pages\\DashboardPage.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\pages\\Map.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\reducers\\authReducers.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\reducers\\trendingFeedsReducer.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\reducers\\headlinesFeedsReducer.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\pages\\LoginPage.js",["183","184"],"import * as React from \"react\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport { Formik } from \"formik\";\r\nimport { postUserLogin } from '../actions/AuthAction';\r\nimport LoginForm from '../components/Form/LoginForm';\r\n\r\nexport default class LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const {dispatch, isFetching, authData } = this.props;\r\n    const strings = isFetching ? {buttonText : \"Please wait\"}: {};\r\n    \r\n    if(authData) {\r\n      if(authData.success){\r\n        return <Redirect to=\"/\" />\r\n      }\r\n    }\r\n    const message= (authData && authData.success === false) ? (authData.message || \"Something went wrong\") : undefined\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n        }}\r\n        validate={values => {\r\n          // same as above, but feel free to move this into a class method now.\r\n          let errors = {};\r\n          if (!values.email) {\r\n            errors.email = \"Required\";\r\n          } else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n          ) {\r\n            errors.email = \"Invalid email address\";\r\n          }\r\n    \r\n          return errors;\r\n        }}\r\n        onSubmit={(\r\n          values,\r\n          { setSubmitting, setErrors /* setValues and other goodies */ }\r\n        ) => {\r\n          if(!isFetching)\r\n            dispatch(postUserLogin(values))\r\n          // alert(\"Done!\");\r\n        }}\r\n        render={({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          strings,\r\n          isSubmitting\r\n        }) => (\r\n\r\n            <LoginForm\r\n              onSubmit={handleSubmit}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              values={values}\r\n              errors={errors}\r\n              touched={touched}\r\n              message={message}\r\n              >\r\n              </LoginForm>\r\n          \r\n          )}\r\n\r\n      />\r\n    );\r\n  }\r\n}","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\actions\\AuthAction.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\pages\\HeadlinesFeedsPage.js",["185","186","187","188","189","190"],"import * as React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { fetchNewsList } from '../actions/HeadlinesFeedsAction';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { findSourceLogo } from '../util/ImageUtil';\r\nimport { momentFromNow } from '../util/CommonUtil';\r\n\r\nimport {\r\n  Page,\r\n  Grid,\r\n  Card,\r\n} from \"tabler-react\";\r\n\r\nimport SiteWrapper from \"../components/SiteWrapper.react\";\r\nimport HeadlineFeed from \"../components/HeadlineFeed\";\r\n\r\nexport default class HeadlinesFeedsPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(fetchNewsList());\r\n  }\r\n\r\n  loadMoreData = () => {\r\n    const { dispatch } = this.props;\r\n    let page = 1;\r\n    if (this.props && this.props.page) {\r\n      page = this.props.page;\r\n    }\r\n\r\n    if (page < 1) {\r\n      page = 1;\r\n    }\r\n    dispatch(fetchNewsList(page));\r\n  }\r\n\r\n  render() {\r\n    const newsList = [...this.props.list];\r\n    console.log(newsList);\r\n\r\n    const feeds = [];\r\n    if (newsList.length == 0) {\r\n      /* there are no item in response list */\r\n    } else {\r\n\r\n      for (var i = 0; i < newsList.length; i++) {\r\n        const items = newsList[i].data.slice(0, newsList.length > 5 ? 5 : newsList.length);\r\n        if (items.length == 0) {\r\n          break;\r\n        }\r\n        const headline = items.shift();\r\n        feeds.push(\r\n          <Grid.Col width={12}>\r\n            <Card>\r\n              <HeadlineFeed\r\n                title={headline.title}\r\n                sourceUrl={headline.source.url}\r\n                description={headline.summary}\r\n                imageUrl={headline.thumbnail}\r\n                date={momentFromNow(headline.publicationDate)}\r\n                sourceBaseUrl={headline.source.baseUrl}\r\n                sourceName={headline.source.displayName}\r\n                sourceImageUrl={findSourceLogo(headline.source.name)}\r\n                subs={items && items.length > 0 &&\r\n                  <React.Fragment>{\r\n                    items.map(item => (\r\n                      <HeadlineFeed.Sub\r\n                        title={item.title}\r\n                        sourceUrl={item.source.url}\r\n                        sourceName={item.source.displayName}\r\n                        sourceBaseUrl={item.source.baseUrl}\r\n                        sourceImageUrl={findSourceLogo(item.source.name)}\r\n                        date={momentFromNow(item.publicationDate)}\r\n                      />))\r\n                  }\r\n                  </React.Fragment>\r\n                } />\r\n\r\n            </Card>\r\n          </Grid.Col>\r\n        )\r\n      }\r\n    }\r\n\r\n    let endOfPage;\r\n    if (!this.props.hasMore && newsList.length != 0) {\r\n      endOfPage =\r\n        <div class=\"col-12 d-flex justify-content-center\">\r\n          <div class=\"text-muted bold\" style={{\r\n            backgroundColor: \"transparent\",\r\n            backgroundClip: \"unset\",\r\n            border: \"0\",\r\n            borderRadius: \"0\",\r\n            boxShadow: \"none\"\r\n          }}>Oop! Hết tin rồi, quay lại sau nhé!</div>\r\n        </div>\r\n    }\r\n\r\n    let body;\r\n    if (newsList.length != 0) {\r\n      body = <Page.Content title=\"Tin Chính\">\r\n        <InfiniteScroll\r\n          style={{\r\n            height: \"auto\", overflow: \"disabled\"\r\n          }}\r\n          dataLength={newsList.length}\r\n          next={this.loadMoreData}\r\n          hasMore={this.props.hasMore}\r\n          loader={\r\n            <div class=\"col-12 d-flex justify-content-center\">\r\n              <div class=\"loader card\" style={{\r\n                backgroundColor: \"transparent\",\r\n                backgroundClip: \"unset\",\r\n                border: \"0\",\r\n                borderRadius: \"0\",\r\n                boxShadow: \"none\"\r\n              }} />\r\n            </div>}>\r\n          <Grid.Row>\r\n\r\n            {feeds}\r\n          </Grid.Row>\r\n\r\n          {endOfPage}\r\n        </InfiniteScroll>\r\n      </Page.Content >\r\n    } else {\r\n      body = <Page.Content></Page.Content>\r\n    }\r\n\r\n    let user = this.props.authData ? this.props.authData.user : undefined;\r\n    return (\r\n      <SiteWrapper showFooter={newsList.length != 0} currentUser={user} dispatch={this.props.dispatch}>\r\n        {body}\r\n      </SiteWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nHeadlinesFeedsPage.propTypes = {\r\n  list: PropTypes.array.isRequired,\r\n  dispatch: PropTypes.func.isRequired\r\n}","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\actions\\HeadlinesFeedsAction.js",["191","192","193"],"import { dispatch} from \"react-redux\";\r\n\r\nimport * as types from '../constants/ActionTypes';\r\n\r\nimport { loadApi, loadDefaultApi } from \"../util/ApiUtil\";\r\n\r\n\r\nexport const REQUEST_NEWS_RELOAD = \"REQUEST_NEWS_RELOAD_HEADLINES\";\r\nexport const RECEIVE_NEWS_RELOAD = \"RECEIVE_NEWS_RELOAD_HEADLINES\";\r\n\r\nexport const REQUEST_NEWS_LOAD_MORE = \"REQUEST_NEWS_LOAD_MORE_HEADLINES\";\r\nexport const RECEIVE_NEWS_LOAD_MORE = \"RECEIVE_NEWS_LOAD_MORE_HEADLINES\";\r\n\r\n\r\nfunction requestNewsListReload() {\r\n    return {\r\n        type: REQUEST_NEWS_RELOAD\r\n    }\r\n}\r\n\r\nfunction requestNewsListLoadMore() {\r\n    return {\r\n        type: REQUEST_NEWS_LOAD_MORE\r\n    }\r\n}\r\n\r\nfunction receiveNewsListReload(list = []) {\r\n    return {\r\n        type: RECEIVE_NEWS_RELOAD,\r\n        list\r\n    }\r\n}\r\n\r\nfunction receiveNewsListLoadMore(list = [], page = 1) {\r\n    return {\r\n        type: RECEIVE_NEWS_LOAD_MORE,\r\n        list,\r\n        page\r\n    }\r\n}\r\n\r\nexport function loadNewsDetail(id) {\r\n    return {\r\n        type: types.SHOW_NEWS_DETAIL,\r\n        id\r\n    }\r\n}\r\n\r\nexport function fetchNewsList(page) {\r\n    if (!page|| page == 0) {\r\n        return dispatch => {\r\n            dispatch(requestNewsListReload())\r\n            return loadDefaultApi(\"/news/feed/similarity\").then(req => dispatch(receiveNewsListReload(req)));\r\n        }\r\n    } else {\r\n        return dispatch => {\r\n            dispatch(requestNewsListLoadMore())\r\n            return loadDefaultApi(\"/news/feed/similarity?page=\"+(page+1)).then(req => dispatch(receiveNewsListLoadMore(req, page+1)));\r\n        }\r\n    }\r\n}\r\n\r\n","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\pages\\RegisterPage.js",["194"],"import * as React from \"react\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport { Formik } from \"formik\";\r\nimport RegisterForm from \"../components/Form/RegisterForm\";\r\nimport { postUserRegister } from '../actions/AuthAction';\r\n\r\nexport default class RegisterPage extends React.Component {\r\n  render() {\r\n    const {dispatch, isFetching, authData } = this.props;\r\n    const strings = isFetching ? {buttonText : \"Please wait\"}: {};\r\n    \r\n    if(authData && authData.user && authData.user.email) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n          name: \"\",\r\n          terms: false,\r\n          username: \"\"\r\n        }}\r\n        validate={values => {\r\n          // same as above, but feel free to move this into a class method now.\r\n          let errors = {};\r\n          if (!values.email) {\r\n            errors.email = \"Required\";\r\n          } else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n          ) {\r\n            errors.email = \"Invalid email address\";\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={(\r\n          values,\r\n          { setSubmitting, setErrors /* setValues and other goodies */ }\r\n        ) => {\r\n          if(!isFetching)\r\n         dispatch(postUserRegister(values))\r\n          // alert(\"Done!\");\r\n        }}\r\n        render={({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          strings,\r\n          isSubmitting,\r\n        }) => (\r\n            <RegisterForm\r\n              onSubmit={handleSubmit}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              values={values}\r\n              errors={errors}\r\n              touched={touched}\r\n            />\r\n          )}\r\n      />\r\n    );\r\n  }\r\n}","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\actions\\TrendingFeedsAction.js",["195","196"],"import { dispatch} from \"react-redux\";\r\n\r\nimport * as types from '../constants/ActionTypes';\r\n\r\nimport { loadApi, loadDefaultApi } from \"../util/ApiUtil\";\r\n\r\n\r\nexport const REQUEST_NEWS_RELOAD = \"REQUEST_NEWS_RELOAD_TRENDING\";\r\nexport const RECEIVE_NEWS_RELOAD = \"RECEIVE_NEWS_RELOAD_TRENDING\";\r\n\r\nexport const REQUEST_NEWS_LOAD_MORE = \"REQUEST_NEWS_LOAD_MORE_TRENDING\";\r\nexport const RECEIVE_NEWS_LOAD_MORE = \"RECEIVE_NEWS_LOAD_MORE_TRENDING\";\r\n\r\n\r\nfunction requestNewsListReload() {\r\n    return {\r\n        type: REQUEST_NEWS_RELOAD\r\n    }\r\n}\r\n\r\nfunction requestNewsListLoadMore() {\r\n    return {\r\n        type: REQUEST_NEWS_LOAD_MORE\r\n    }\r\n}\r\n\r\nfunction receiveNewsListReload(list = []) {\r\n    return {\r\n        type: RECEIVE_NEWS_RELOAD,\r\n        list\r\n    }\r\n}\r\n\r\nfunction receiveNewsListLoadMore(list = [], page = 1) {\r\n    return {\r\n        type: RECEIVE_NEWS_LOAD_MORE,\r\n        list,\r\n        page\r\n    }\r\n}\r\n\r\nexport function loadNewsDetail(id) {\r\n    return {\r\n        type: types.SHOW_NEWS_DETAIL,\r\n        id\r\n    }\r\n}\r\n\r\nexport function fetchNewsList(page) {\r\n    if (!page|| page === 0) {\r\n        return dispatch => {\r\n            dispatch(requestNewsListReload())\r\n            return loadDefaultApi(\"/news\").then(req => dispatch(receiveNewsListReload(req)));\r\n        }\r\n    } else {\r\n        return dispatch => {\r\n            dispatch(requestNewsListLoadMore())\r\n            return loadDefaultApi(\"/news?page=\"+(page+1)).then(req => dispatch(receiveNewsListLoadMore(req, page+1)));\r\n        }\r\n    }\r\n}\r\n\r\n","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\pages\\TrendingFeedsPage.js",["197","198","199","200","201","202"],"import * as React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { fetchNewsList } from '../actions/TrendingFeedsAction';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { findSourceLogo } from '../util/ImageUtil';\r\nimport { momentCalendar, momentFromNow } from '../util/CommonUtil';\r\n\r\nimport {\r\n  Page,\r\n  Grid,\r\n  BlogCard,\r\n} from \"tabler-react\";\r\n\r\nimport SiteWrapper from \"../components/SiteWrapper.react\";\r\n\r\nexport default class TrendingFeedsPage extends React.Component {\r\n  componentDidMount() {\r\n    const dispatch = this.props.dispatch;\r\n    dispatch(fetchNewsList());\r\n  }\r\n\r\n  loadMoreData = () => {\r\n    const dispatch = this.props.dispatch;\r\n    let page = 1;\r\n    if (this.props && this.props.page) {\r\n      page = this.props.page;\r\n    }\r\n\r\n    if (page < 1) {\r\n      page = 1;\r\n    }\r\n    dispatch(fetchNewsList(page));\r\n  }\r\n\r\n  render() {\r\n    const newsList = [...this.props.list];\r\n    console.log(newsList);\r\n\r\n    const mainNews = [];\r\n    const moreNews = [];\r\n    if (newsList.length == 0) {\r\n      /* there are no item in response list */\r\n    } else if (newsList.length <= 7) {\r\n      /* no more than 7 items */\r\n      for (var i = 0; i < newsList.length; i++) {\r\n        let item = newsList[i];\r\n        mainNews.push(\r\n          <Grid.Col width={12}>\r\n            <BlogCard\r\n              imgSrc={item.thumbnail}\r\n              imgAlt={item.summary}\r\n              title={item.title}\r\n              description={item.summary}\r\n              profileHref={item.source.baseUrl}\r\n              postHref={item.source.url}\r\n              authorName={item.source.displayName}\r\n              avatarImgSrc={findSourceLogo(item.source.name)}\r\n              date={momentFromNow(item.publicationDate)}\r\n              iconName={\"arrow-right\"}\r\n            />\r\n          </Grid.Col>)\r\n      }\r\n\r\n    } else {\r\n      /* more than 7 items\r\n      \r\n      */\r\n      mainNews.push(\r\n        /* the biggest first item */\r\n        <Grid.Col width={12} lg={9} md={12}>\r\n          <BlogCard\r\n            imgSrc={newsList[0].thumbnail}\r\n            imgAlt={newsList[0].summary}\r\n            title={newsList[0].title}\r\n            description={newsList[0].summary}\r\n            postHref={newsList[0].source.url}\r\n            profileHref={newsList[0].source.baseUrl}\r\n            authorName={newsList[0].source.displayName}\r\n            avatarImgSrc={findSourceLogo(newsList[0].source.name)}\r\n            date={momentFromNow(newsList[0].publicationDate)}\r\n            iconName={\"arrow-right\"}\r\n          />\r\n        </Grid.Col>);\r\n\r\n      mainNews.push(\r\n        /* two items on the right */\r\n        <Grid.Col width={12} lg={3} md={12}>\r\n        <Grid.Row>\r\n          <Grid.Col width={12} lg={12} md={6}>\r\n          <BlogCard\r\n            imgSrc={newsList[1].thumbnail}\r\n            title={newsList[1].title}\r\n            //description={newsList[1].summary}\r\n            postHref={newsList[1].source.url}\r\n            profileHref={newsList[1].source.baseUrl}\r\n            authorName={newsList[1].source.displayName}\r\n            avatarImgSrc={findSourceLogo(newsList[1].source.name)}\r\n            date={momentFromNow(newsList[1].publicationDate)}\r\n            iconName={\"arrow-right\"}\r\n          />\r\n          </Grid.Col>\r\n          <Grid.Col width={12} lg={12} md={6}>\r\n          <BlogCard\r\n            imgSrc={newsList[2].thumbnail}\r\n            title={newsList[2].title}\r\n            //description={newsList[1].summary}\r\n            postHref={newsList[2].source.url}\r\n            profileHref={newsList[2].source.baseUrl}\r\n            authorName={newsList[2].source.displayName}\r\n            avatarImgSrc={findSourceLogo(newsList[2].source.name)}\r\n            date={momentFromNow(newsList[2].publicationDate)}\r\n            iconName={\"arrow-right\"}\r\n          />\r\n          </Grid.Col>\r\n        </Grid.Row>\r\n        </Grid.Col>\r\n        );\r\n\r\n      for (var i = 3; i < 7; i++) {\r\n        let item = newsList[i];\r\n        mainNews.push(\r\n          <Grid.Col width={12} lg={6} xl={3} md={6}>\r\n            <BlogCard\r\n              imgSrc={item.thumbnail}\r\n              // imgAlt={item.summary}\r\n              title={item.title}\r\n              description={item.summary}\r\n              postHref={item.source.url}\r\n              profileHref={item.source.baseUrl}\r\n              authorName={item.source.displayName}\r\n              avatarImgSrc={findSourceLogo(item.source.name)}\r\n              date={momentFromNow(item.publicationDate)}\r\n              iconName={\"arrow-right\"}\r\n            />\r\n          </Grid.Col>)\r\n      }\r\n\r\n      for (var i = 6; i < newsList.length; i++) {\r\n        let item = newsList[i];\r\n        moreNews.push(\r\n          <Grid.Col width={12}>\r\n            <BlogCard\r\n              aside\r\n              imgSrc={item.thumbnail}\r\n              imgAlt={item.summary}\r\n              postHref={item.source.url}\r\n              title={item.title}\r\n              description={item.summary}\r\n              profileHref={item.source.baseUrl}\r\n              authorName={item.source.displayName}\r\n              avatarImgSrc={findSourceLogo(item.source.name)}\r\n              date={momentCalendar(item.publicationDate)}\r\n              iconName={\"arrow-right\"}\r\n            />\r\n          </Grid.Col>\r\n        )\r\n      }\r\n\r\n    }\r\n\r\n    let endOfPage;\r\n    if (!this.props.hasMore && newsList.length != 0) endOfPage =\r\n      <div class=\"col-12 d-flex justify-content-center\">\r\n        <div class=\"text-muted bold\" style={{\r\n          backgroundColor: \"transparent\",\r\n          backgroundClip: \"unset\",\r\n          border: \"0\",\r\n          borderRadius: \"0\",\r\n          boxShadow: \"none\"\r\n        }}>Oop! Hết tin rồi, quay lại sau nhé!</div>\r\n      </div>\r\n\r\n    let body;\r\n    if (newsList.length != 0) {\r\n      body = <Page.Content title=\"Xu huớng\">\r\n        <Grid.Row cards deck>\r\n          {mainNews}\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Page.Header title={\"Tin khác\"} />\r\n          <InfiniteScroll\r\n            dataLength={newsList.length}\r\n            next={this.loadMoreData}\r\n            hasMore={this.props.hasMore}\r\n            loader={\r\n              <div class=\"col-12 d-flex justify-content-center\">\r\n                <div class=\"loader card\" style={{\r\n                  backgroundColor: \"transparent\",\r\n                  backgroundClip: \"unset\",\r\n                  border: \"0\",\r\n                  borderRadius: \"0\",\r\n                  boxShadow: \"none\"\r\n                }} />\r\n              </div>}>\r\n            {moreNews}\r\n            {endOfPage}\r\n          </InfiniteScroll>\r\n        </Grid.Row >\r\n      </Page.Content >\r\n    } else {\r\n      body = <Page.Content></Page.Content>\r\n    }\r\n\r\n    let user = this.props.authData ? this.props.authData.user : undefined;\r\n    return (\r\n      <SiteWrapper showFooter={newsList.length != 0} currentUser={user} dispatch={this.props.dispatch}>\r\n        {body}\r\n      </SiteWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nTrendingFeedsPage.propTypes = {\r\n  list: PropTypes.array.isRequired,\r\n  dispatch: PropTypes.func.isRequired\r\n}","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\constants\\ActionTypes.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\util\\AuthUtil.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\Form\\LoginForm.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\SiteWrapper.react.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\util\\CommonUtil.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\util\\ApiUtil.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\Form\\RegisterForm.js",["203","204"],"import * as React from \"react\";\r\n\r\nimport {\r\n  FormCard,\r\n  FormTextInput,\r\n  FormCheckboxInput,\r\n  StandaloneFormPage\r\n} from \"tabler-react\";\r\nimport withTouchedErrors from \"../../util/withTouchedErrors.react\";\r\n\r\nimport defaultStrings from \"./RegisterFormStrings\";\r\n// import type { stringTypes } from \"./RegisterPage.strings\";\r\n\r\nimport { FormEvents, FocusEvents } from \"tabler-react\";\r\n\r\n\r\n/**\r\n * A register page\r\n * Can be easily wrapped with form libraries like formik and redux-form\r\n */\r\nfunction RegisterForm(props) {\r\n  const {\r\n    action,\r\n    method,\r\n    onSubmit,\r\n    onChange,\r\n    onBlur,\r\n    values,\r\n    strings = {},\r\n    errors,\r\n  } = props;\r\n\r\n  return (\r\n    <StandaloneFormPage imageURL={\"./images/local_news.svg\"}>\r\n\r\n\r\n      <FormCard\r\n        buttonText={strings.buttonText || defaultStrings.buttonText}\r\n        title={strings.title || defaultStrings.title}\r\n        onSubmit={onSubmit}\r\n        action={action}\r\n        method={method}\r\n      >\r\n        <FormTextInput\r\n          name=\"name\"\r\n          label={strings.nameLabel || defaultStrings.nameLabel}\r\n          placeholder={\r\n            strings.namePlaceholder || defaultStrings.namePlaceholder\r\n          }\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.name}\r\n          error={errors && errors.name}\r\n        />\r\n        <FormTextInput\r\n          name=\"email\"\r\n          label={strings.emailLabel || defaultStrings.emailLabel}\r\n          placeholder={\r\n            strings.emailPlaceholder || defaultStrings.emailPlaceholder\r\n          }\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.email}\r\n          error={errors && errors.email}\r\n        />\r\n        <FormTextInput\r\n          name=\"username\"\r\n          label={strings.usernamePlaceholder || defaultStrings.usernameLabel}\r\n          placeholder={\r\n            strings.usernamePlaceholder || defaultStrings.usernamePlaceholder\r\n          }\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.username}\r\n          error={errors && errors.username}\r\n        />\r\n\r\n        <FormTextInput\r\n          name=\"password\"\r\n          type=\"password\"\r\n          label={strings.passwordLabel || defaultStrings.passwordLabel}\r\n          placeholder={\r\n            strings.passwordPlaceholder || defaultStrings.passwordPlaceholder\r\n          }\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.password}\r\n          error={errors && errors.password}\r\n        />\r\n        <FormCheckboxInput\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.terms}\r\n          name=\"terms\"\r\n          label={strings.termsLabel || defaultStrings.termsLabel}\r\n        />\r\n      </FormCard>\r\n    </StandaloneFormPage>\r\n  );\r\n}\r\n\r\nconst RegisterPageWithTouchedErrors = withTouchedErrors(\r\n  [\"name\", \"email\", \"email\", \"password\", \"terms\"]\r\n)(RegisterForm);\r\n\r\nexport default RegisterPageWithTouchedErrors;","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\util\\ImageUtil.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\util\\withTouchedErrors.react.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\Form\\LoginFormStrings.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\HeadlineFeed\\index.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\Form\\RegisterFormStrings.js",[],"C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\base\\site\\InnerSiteWrapper.react.js",["205"],"import * as React from \"react\";\r\nimport { Page, Site, Nav } from \"tabler-react\";\r\n\r\nimport AliHeader from \"./AliHeader\";\r\n\r\n\r\nclass InnerSiteWrapper extends React.PureComponent {\r\n    static displayName = \"AliWrapper\";\r\n\r\n    state = {\r\n        collapseMobileMenu: true,\r\n    }\r\n\r\n    handleCollapseMobileMenu = () => {\r\n        this.setState(s => ({ collapseMobileMenu: !s.collapseMobileMenu }))\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            headerProps,\r\n            navProps,\r\n            footerProps,\r\n            children,\r\n            routerContextComponentType,\r\n        } = this.props;\r\n\r\n        const headerPropsWithToggleClick = {\r\n            ...headerProps,\r\n            onMenuToggleClick: this.handleCollapseMobileMenu,\r\n        };\r\n\r\n        const header = React.createElement(AliHeader, headerPropsWithToggleClick);\r\n        const navPropsWithCollapse = {\r\n            ...navProps,\r\n            collapse: this.state.collapseMobileMenu,\r\n            routerContextComponentType: routerContextComponentType,\r\n        };\r\n\r\n        const nav = React.createElement(Site.Nav, navPropsWithCollapse);\r\n\r\n        const footer = React.createElement(Site.Footer, footerProps);\r\n        return (\r\n            <Page>\r\n                <Page.Main>\r\n                    {header}\r\n                    {nav}\r\n                    {children}\r\n                </Page.Main>\r\n                {footer}\r\n            </Page>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InnerSiteWrapper;","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\HeadlineFeed\\HeadlineFeed.js",["206","207","208"],"// @flow\r\n\r\nimport * as React from \"react\";\r\nimport cn from \"classnames\";\r\nimport {  Media, List } from \"tabler-react\";\r\nimport SubHeadlineFeed from \"./SubHeadlineFeed\";\r\n\r\ntype Props = {|\r\n+children ?: React.Node,\r\n    +className ?: string,\r\n    +imageUrl ?: string,\r\n    +date ?: string,\r\n    +title ?: string,\r\n    +description ? : string,\r\n    +sourceImageUrl ?: string,\r\n    +sourceName ? : string,\r\n    +sourceUrl ?: string,\r\n    +sourceBaseUrl ?: string,\r\n    +subs: React.Node,\r\n|}\r\n\r\nfunction HeadlineFeed({\r\n    className,\r\n    children,\r\n    imageUrl,\r\n    date,\r\n    title,\r\n    description,\r\n    sourceImageUrl,\r\n    sourceName,\r\n    sourceUrl,\r\n    sourceBaseUrl,\r\n    subs,\r\n}: Props): React.Node {\r\n    const classes = cn(\"py-5 no-outline\", className);\r\n    return (\r\n        <List.GroupItem className={classes}>\r\n            <Media>\r\n                <img src={imageUrl} href={sourceUrl} className=\"img-headline img-center-crop \" target=\"_blank\" rel=\"noopener noreferrer\" />\r\n                <Media.Body>\r\n                    <Media.Heading>\r\n                        \r\n                        <div className=\"div-headline-source\">\r\n                            <img src={sourceImageUrl} href={sourceBaseUrl} className=\"img-headline-sourcelogo\" target=\"_blank\" rel=\"noopener noreferrer\" />\r\n                            <a className=\"text-default text-bl txt-headline-source\" href={sourceBaseUrl}>{sourceName}</a>\r\n                            <span className=\"middle-dot-headline text-default text-bl\">⬤</span>\r\n                            <span className=\"text-default text-bl txt-headline-source\">{date}</span>\r\n                        <a href={sourceUrl} className=\"h4 fe fe-activity float-right text-muted\"></a>\r\n\r\n                        </div>\r\n\r\n                        <a href={sourceUrl} className=\"text-default text-bl\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <h4 class=\"headline\">{title}</h4>\r\n                        </a>\r\n                    </Media.Heading>\r\n                    <div className=\"text-description-headline\">{description}</div>\r\n                    {subs && <Media.List>{subs}</Media.List>}\r\n                </Media.Body>\r\n            </Media>\r\n        </List.GroupItem>\r\n    );\r\n}\r\n\r\n//HeadlineFeed.List = HeadlineFeedList;\r\nHeadlineFeed.Sub = SubHeadlineFeed;\r\n\r\nexport default HeadlineFeed;","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\base\\site\\AliHeader.js",["209"],"import * as React from \"react\";\r\nimport AliLogo from \"./AliLogo\";\r\nimport {AccountDropdown, Container, Notification} from \"tabler-react\";\r\n\r\nconst AliHeader = ({\r\n    children,\r\n    href,\r\n    align,\r\n    imageURL,\r\n    alt,\r\n    title,\r\n    description,\r\n    notificationsTray: notificationsTrayFromProps,\r\n    accountDropdown: accountDropdownFromProps,\r\n    navItems,\r\n    onMenuToggleClick,\r\n})  => {\r\n\r\nconst notificationsTray = notificationsTrayFromProps && \r\nReact.createElement(Notification.Tray, notificationsTrayFromProps);\r\n\r\nconst accountDropdown = accountDropdownFromProps && \r\nReact.createElement(AccountDropdown, accountDropdownFromProps);\r\n\r\n    return (\r\n        <div className=\"header py-4\">\r\n            <Container className={align}>\r\n                <div className=\"d-flex\">\r\n                   {children || (\r\n                   <React.Fragment>\r\n                    <AliLogo href={href} alt={alt} src={imageURL} title={title} description={description} />\r\n                    <div className=\"d-flex order-lg-2 ml-auto\">\r\n                        {navItems}\r\n                        {notificationsTray}\r\n                        {accountDropdown}\r\n                    </div>\r\n                    <a className=\"header-toggler d-lg-none ml-3 ml-lg-0\">\r\n                        <span className=\"header-toggler-icon\"\r\n                        onClick={onMenuToggleClick}/>\r\n                        <span className=\"header-toggler-icon\"/>\r\n                    </a>\r\n                        </React.Fragment>\r\n                   )}\r\n                   </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nAliHeader.displayName= \"Ali.Header\"\r\nexport default AliHeader;","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\HeadlineFeed\\SubHeadlineFeed.js",["210"],"// @flow\r\n\r\nimport * as React from \"react\";\r\nimport { Media, List } from \"tabler-react\";\r\n\r\ntype Props = {|\r\n    +children ?: React.Node,\r\n    +className ?: string,\r\n    +imageUrl ?: string,\r\n    +date ?: string,\r\n    +title ?: string,\r\n    +description ? : string,\r\n    +sourceImageUrl ?: string,\r\n    +sourceName ? : string,\r\n    +sourceUrl ?: string,\r\n    +sourceBaseUrl ?: string,\r\n    +subs: React.Node,\r\n    |};\r\n\r\nfunction SubHeadlineFeed({\r\n    className,\r\n    children,\r\n    imageUrl,\r\n    date,\r\n    title,\r\n    description,\r\n    sourceImageUrl,\r\n    sourceName,\r\n    sourceUrl,\r\n    sourceBaseUrl,\r\n    subs,\r\n}: Props): React.Node {\r\n    return (\r\n        <Media.ListItem className={className}>\r\n\r\n            <Media.Body className=\"subheadline\">\r\n                <span className=\"middle-dot-headline text-default text-bl\">⬤</span>\r\n                <span>\r\n                    <a href={sourceUrl} className=\"text-bl text-default txt-subheadline\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <strong>{title}</strong>\r\n                    </a>\r\n                    <div className=\"div-subheadline-source\">\r\n                        <a className=\"text-default text-bl txt-headline-source\" href={sourceBaseUrl}>{sourceName}</a>\r\n                        <span className=\"middle-dot-headline text-default text-bl\">⬤</span>\r\n                        <span className=\"text-default text-bl txt-headline-source\">{date}</span>\r\n                    </div>\r\n                </span>\r\n\r\n            </Media.Body>\r\n\r\n        </Media.ListItem>\r\n    );\r\n\r\n}\r\n\r\nexport default SubHeadlineFeed;","C:\\Users\\nmtruong\\Desktop\\kltn\\ali-fe\\src\\components\\base\\site\\AliLogo.js",["211","212"],"import { string } from \"prop-types\";\r\n// @flow\r\nimport * as React from \"react\";\r\n\r\ntype Props = {|\r\n+href?: string,\r\n+src?: string,\r\n+alt?: string,\r\n+title?: string,\r\n+description?: string\r\n|};\r\n\r\nconst AliLogo = (props: Props): React.Node => (\r\n    <a className=\"header-brand nav-link pr-0 leading-none\" href={props.href}>\r\n        <img src={props.src} className=\"header-brand-img\" alt={props.alt} />\r\n        <span className=\"m1-2 d-none d-lg-block\">\r\n            <span className=\"text-default font-weight-bold\">\r\n                {props.title}\r\n            </span>\r\n            <small className=\"text-blue d-block mt-1 dt\" style={{fontSize: \"1rem\"}}>\r\n                {props.description}\r\n            </small>\r\n        </span>\r\n    </a>\r\n)\r\n\r\nAliLogo.displayName=\"AliLogo\";\r\nexport default AliLogo;",{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":3,"column":8,"nodeType":"219","messageId":"220","endLine":3,"endColumn":13},{"ruleId":"217","severity":1,"message":"221","line":20,"column":7,"nodeType":"219","messageId":"220","endLine":20,"endColumn":25},{"ruleId":"217","severity":1,"message":"221","line":18,"column":7,"nodeType":"219","messageId":"220","endLine":18,"endColumn":25},{"ruleId":"217","severity":1,"message":"218","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"217","severity":1,"message":"221","line":12,"column":7,"nodeType":"219","messageId":"220","endLine":12,"endColumn":25},{"ruleId":"217","severity":1,"message":"222","line":58,"column":10,"nodeType":"219","messageId":"220","endLine":58,"endColumn":22},{"ruleId":"223","severity":1,"message":"224","line":8,"column":3,"nodeType":"225","messageId":"226","endLine":10,"endColumn":4},{"ruleId":"217","severity":1,"message":"227","line":14,"column":11,"nodeType":"219","messageId":"220","endLine":14,"endColumn":18},{"ruleId":"223","severity":1,"message":"224","line":18,"column":3,"nodeType":"225","messageId":"226","endLine":20,"endColumn":4},{"ruleId":"228","severity":1,"message":"229","line":45,"column":25,"nodeType":"230","messageId":"231","endLine":45,"endColumn":27},{"ruleId":"228","severity":1,"message":"229","line":51,"column":26,"nodeType":"230","messageId":"231","endLine":51,"endColumn":28},{"ruleId":"228","severity":1,"message":"232","line":89,"column":48,"nodeType":"230","messageId":"231","endLine":89,"endColumn":50},{"ruleId":"228","severity":1,"message":"232","line":103,"column":25,"nodeType":"230","messageId":"231","endLine":103,"endColumn":27},{"ruleId":"228","severity":1,"message":"232","line":136,"column":48,"nodeType":"230","messageId":"231","endLine":136,"endColumn":50},{"ruleId":"217","severity":1,"message":"233","line":1,"column":10,"nodeType":"219","messageId":"220","endLine":1,"endColumn":18},{"ruleId":"217","severity":1,"message":"234","line":5,"column":10,"nodeType":"219","messageId":"220","endLine":5,"endColumn":17},{"ruleId":"228","severity":1,"message":"229","line":50,"column":22,"nodeType":"230","messageId":"231","endLine":50,"endColumn":24},{"ruleId":"217","severity":1,"message":"227","line":10,"column":11,"nodeType":"219","messageId":"220","endLine":10,"endColumn":18},{"ruleId":"217","severity":1,"message":"233","line":1,"column":10,"nodeType":"219","messageId":"220","endLine":1,"endColumn":18},{"ruleId":"217","severity":1,"message":"234","line":5,"column":10,"nodeType":"219","messageId":"220","endLine":5,"endColumn":17},{"ruleId":"228","severity":1,"message":"229","line":41,"column":25,"nodeType":"230","messageId":"231","endLine":41,"endColumn":27},{"ruleId":"235","severity":1,"message":"236","line":119,"column":16,"nodeType":"219","messageId":"237","endLine":119,"endColumn":17},{"ruleId":"235","severity":1,"message":"236","line":138,"column":16,"nodeType":"219","messageId":"237","endLine":138,"endColumn":17},{"ruleId":"228","severity":1,"message":"232","line":162,"column":48,"nodeType":"230","messageId":"231","endLine":162,"endColumn":50},{"ruleId":"228","severity":1,"message":"232","line":174,"column":25,"nodeType":"230","messageId":"231","endLine":174,"endColumn":27},{"ruleId":"228","severity":1,"message":"232","line":206,"column":48,"nodeType":"230","messageId":"231","endLine":206,"endColumn":50},{"ruleId":"217","severity":1,"message":"238","line":14,"column":10,"nodeType":"219","messageId":"220","endLine":14,"endColumn":20},{"ruleId":"217","severity":1,"message":"239","line":14,"column":22,"nodeType":"219","messageId":"220","endLine":14,"endColumn":33},{"ruleId":"217","severity":1,"message":"240","line":2,"column":22,"nodeType":"219","messageId":"220","endLine":2,"endColumn":25},{"ruleId":"241","severity":1,"message":"242","line":39,"column":17,"nodeType":"243","endLine":39,"endColumn":140},{"ruleId":"241","severity":1,"message":"242","line":44,"column":29,"nodeType":"243","endLine":44,"endColumn":156},{"ruleId":"244","severity":1,"message":"245","line":48,"column":25,"nodeType":"243","endLine":48,"endColumn":98},{"ruleId":"246","severity":1,"message":"247","line":37,"column":21,"nodeType":"243","endLine":37,"endColumn":74},{"ruleId":"217","severity":1,"message":"248","line":4,"column":17,"nodeType":"219","messageId":"220","endLine":4,"endColumn":21},{"ruleId":"217","severity":1,"message":"249","line":1,"column":10,"nodeType":"219","messageId":"220","endLine":1,"endColumn":16},{"ruleId":"250","severity":1,"message":"251","line":2,"column":1,"nodeType":"252","endLine":2,"endColumn":9},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'mapDispatchToProps' is assigned a value but never used.","'openInNewTab' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'strings' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'dispatch' is defined but never used.","'loadApi' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","'FormEvents' is defined but never used.","'FocusEvents' is defined but never used.","'Nav' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'List' is defined but never used.","'string' is defined but never used.","flowtype/require-valid-file-annotation","Flow file annotation not at the top of the file.","Line","no-global-assign","no-unsafe-negation"]